// Generated by view binder compiler. Do not edit!
package com.example.trackxmlapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.trackxmlapp.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainActivitiesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatEditText etMaxDistance;

  @NonNull
  public final AppCompatEditText etMaxPrice;

  @NonNull
  public final AppCompatEditText etMinPrice;

  @NonNull
  public final CircleImageView ivMemberImage;

  @NonNull
  public final SeekBar seekBarAutoRefresh;

  @NonNull
  public final TextView seekBarAutoRefreshText;

  @NonNull
  public final Button startButton;

  @NonNull
  public final Switch switchAutoBid;

  @NonNull
  public final Switch switchAutoRefresh;

  @NonNull
  public final TextView tvMemberEmail;

  @NonNull
  public final TextView tvMemberName;

  private ActivityMainActivitiesBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatEditText etMaxDistance, @NonNull AppCompatEditText etMaxPrice,
      @NonNull AppCompatEditText etMinPrice, @NonNull CircleImageView ivMemberImage,
      @NonNull SeekBar seekBarAutoRefresh, @NonNull TextView seekBarAutoRefreshText,
      @NonNull Button startButton, @NonNull Switch switchAutoBid, @NonNull Switch switchAutoRefresh,
      @NonNull TextView tvMemberEmail, @NonNull TextView tvMemberName) {
    this.rootView = rootView;
    this.etMaxDistance = etMaxDistance;
    this.etMaxPrice = etMaxPrice;
    this.etMinPrice = etMinPrice;
    this.ivMemberImage = ivMemberImage;
    this.seekBarAutoRefresh = seekBarAutoRefresh;
    this.seekBarAutoRefreshText = seekBarAutoRefreshText;
    this.startButton = startButton;
    this.switchAutoBid = switchAutoBid;
    this.switchAutoRefresh = switchAutoRefresh;
    this.tvMemberEmail = tvMemberEmail;
    this.tvMemberName = tvMemberName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainActivitiesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainActivitiesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main_activities, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainActivitiesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.et_max_distance;
      AppCompatEditText etMaxDistance = ViewBindings.findChildViewById(rootView, id);
      if (etMaxDistance == null) {
        break missingId;
      }

      id = R.id.et_max_price;
      AppCompatEditText etMaxPrice = ViewBindings.findChildViewById(rootView, id);
      if (etMaxPrice == null) {
        break missingId;
      }

      id = R.id.et_min_price;
      AppCompatEditText etMinPrice = ViewBindings.findChildViewById(rootView, id);
      if (etMinPrice == null) {
        break missingId;
      }

      id = R.id.iv_member_image;
      CircleImageView ivMemberImage = ViewBindings.findChildViewById(rootView, id);
      if (ivMemberImage == null) {
        break missingId;
      }

      id = R.id.seek_bar_auto_refresh;
      SeekBar seekBarAutoRefresh = ViewBindings.findChildViewById(rootView, id);
      if (seekBarAutoRefresh == null) {
        break missingId;
      }

      id = R.id.seek_bar_auto_refresh_text;
      TextView seekBarAutoRefreshText = ViewBindings.findChildViewById(rootView, id);
      if (seekBarAutoRefreshText == null) {
        break missingId;
      }

      id = R.id.startButton;
      Button startButton = ViewBindings.findChildViewById(rootView, id);
      if (startButton == null) {
        break missingId;
      }

      id = R.id.switch_auto_bid;
      Switch switchAutoBid = ViewBindings.findChildViewById(rootView, id);
      if (switchAutoBid == null) {
        break missingId;
      }

      id = R.id.switch_auto_refresh;
      Switch switchAutoRefresh = ViewBindings.findChildViewById(rootView, id);
      if (switchAutoRefresh == null) {
        break missingId;
      }

      id = R.id.tv_member_email;
      TextView tvMemberEmail = ViewBindings.findChildViewById(rootView, id);
      if (tvMemberEmail == null) {
        break missingId;
      }

      id = R.id.tv_member_name;
      TextView tvMemberName = ViewBindings.findChildViewById(rootView, id);
      if (tvMemberName == null) {
        break missingId;
      }

      return new ActivityMainActivitiesBinding((LinearLayout) rootView, etMaxDistance, etMaxPrice,
          etMinPrice, ivMemberImage, seekBarAutoRefresh, seekBarAutoRefreshText, startButton,
          switchAutoBid, switchAutoRefresh, tvMemberEmail, tvMemberName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
