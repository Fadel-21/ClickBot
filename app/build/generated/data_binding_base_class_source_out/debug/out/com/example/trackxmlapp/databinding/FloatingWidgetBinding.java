// Generated by view binder compiler. Do not edit!
package com.example.trackxmlapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.trackxmlapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FloatingWidgetBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button closeButton;

  @NonNull
  public final LinearLayout layoutParent;

  @NonNull
  public final Button mainButton;

  @NonNull
  public final Button startButtonAccessibility;

  private FloatingWidgetBinding(@NonNull LinearLayout rootView, @NonNull Button closeButton,
      @NonNull LinearLayout layoutParent, @NonNull Button mainButton,
      @NonNull Button startButtonAccessibility) {
    this.rootView = rootView;
    this.closeButton = closeButton;
    this.layoutParent = layoutParent;
    this.mainButton = mainButton;
    this.startButtonAccessibility = startButtonAccessibility;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FloatingWidgetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FloatingWidgetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.floating_widget, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FloatingWidgetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.closeButton;
      Button closeButton = ViewBindings.findChildViewById(rootView, id);
      if (closeButton == null) {
        break missingId;
      }

      LinearLayout layoutParent = (LinearLayout) rootView;

      id = R.id.mainButton;
      Button mainButton = ViewBindings.findChildViewById(rootView, id);
      if (mainButton == null) {
        break missingId;
      }

      id = R.id.startButton_accessibility;
      Button startButtonAccessibility = ViewBindings.findChildViewById(rootView, id);
      if (startButtonAccessibility == null) {
        break missingId;
      }

      return new FloatingWidgetBinding((LinearLayout) rootView, closeButton, layoutParent,
          mainButton, startButtonAccessibility);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
